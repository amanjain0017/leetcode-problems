class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {

        vector<int> ans;
        int row = matrix.size() ;
        int col = matrix[0].size();

        int count = 0;
        int total = row*col;

        //index values
        int startRow = 0, endRow = row-1;    
        int startCol = 0, endCol = col-1;

        while(count < total){

            //starting Row
            for(int index=startCol; count<total && index<=endCol; index++){
                ans.push_back(matrix[startRow][index]);
                count++;
            }
            startRow++;

            //ending column
            for(int index=startRow; count<total && index<=endRow; index++){
                ans.push_back(matrix[index][endCol]);
                count++;
            }
            endCol--;

            //ending row
            for(int index=endCol; count<total && index>=startCol; index--){
                ans.push_back(matrix[endRow][index]);
                count++;
            }
            endRow--;

            //starting column
            for(int index=endRow; count<total && index>=startRow; index--){
                ans.push_back(matrix[index][startCol]);
                count++;
            }
            startCol++;
        } 
        return ans;   
    }
};